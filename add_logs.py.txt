import random
from datetime import datetime, timedelta

# Path to your log file
log_file = 'app_logs.txt'

# Predefined sets of log details for different log types
log_types = ["INFO", "ERROR", "WARNING"]
info_messages = [
    "Utilisateur connecté", "Commande créée", "Utilisateur déconnecté",
    "Nouveau produit ajouté au panier", "Email de confirmation envoyé"
]
error_messages = [
    "Échec de l'authentification", "Erreur de traitement de paiement",
    "Erreur de base de données", "Serveur indisponible"
]
warning_messages = [
    "Tentative de connexion suspecte", "Délai de traitement élevé",
    "Problème de synchronisation"
]

# List of sample user and order data to simulate log details
users = ["john_doe", "jane_doe", "alice", "bob"]
order_ids = [f"{i}" for i in range(1000, 1100)]
product_ids = [f"{i}" for i in range(90000, 90100)]
ip_addresses = [f"192.168.0.{i}" for i in range(1, 100)]

# Generate 100 new log entries
new_log_entries = []

# Start generating logs from 2024-10-10 10:25:00
current_time = datetime(2024, 10, 10, 10, 25, 0)

for _ in range(100):
    # Randomly select log type
    log_type = random.choice(log_types)
    
    # Generate a log message and details based on the log type
    if log_type == "INFO":
        message = random.choice(info_messages)
        if message == "Utilisateur connecté" or message == "Utilisateur déconnecté":
            details = f"User: {random.choice(users)}"
        elif message == "Commande créée":
            details = f"OrderID: {random.choice(order_ids)}"
        elif message == "Nouveau produit ajouté au panier":
            details = f"User: {random.choice(users)}, ProductID: {random.choice(product_ids)}"
        else:
            details = ""  # Some INFO logs may have no details

    elif log_type == "ERROR":
        message = random.choice(error_messages)
        if message == "Échec de l'authentification":
            details = f"User: {random.choice(users)}"
        elif message == "Erreur de traitement de paiement":
            details = f"OrderID: {random.choice(order_ids)}"
        elif message == "Erreur de base de données":
            details = "DB: orders"
        else:
            details = ""  # Some ERROR logs may have no details

    else:  # WARNING
        message = random.choice(warning_messages)
        if message == "Tentative de connexion suspecte":
            details = f"IP: {random.choice(ip_addresses)}"
        else:
            details = ""  # Some WARNING logs may have no details

    # Increment the timestamp by a random number of seconds (between 30 and 300)
    current_time += timedelta(seconds=random.randint(30, 300))
    timestamp = current_time.strftime('%Y-%m-%d %H:%M:%S')
    
    # Create a formatted log entry
    new_entry = f"{timestamp} | {log_type} | {message} | {details}"
    new_log_entries.append(new_entry)

# Write the generated log entries to the log file
with open(log_file, 'a') as f:
    f.write("\n".join(new_log_entries) + "\n")

print(f"Successfully added 100 new log entries to '{log_file}'!")